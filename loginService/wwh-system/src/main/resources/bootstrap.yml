server:
  servlet:
    context-path: /system
  port: 8081
# Spring
spring:
  application:
    # 应用名称
    name: wwh-system
  #swagger文档需要的配置
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  #nacos配置
  cloud:
    nacos:
      discovery:
        # 服务注册地址
        username: nacos
        password: nacos
        server-addr: 139.159.232.236:8848
        namespace: d0bf307a-e9da-4149-8c89-b25cebda8f24
      #以下配置在不需要配置中心的情况下可以注释掉
      config:
        # 配置中心地址
        username: nacos
        password: nacos
        server-addr: 139.159.232.236:8848
        namespace: d0bf307a-e9da-4149-8c89-b25cebda8f24

  redis:
    # Redis本地服务器地址，注意要开启redis服务，即那个redis-server.exe
    host: 139.159.232.236
    # Redis服务器端口,默认为6379.若有改动按改动后的来
    port: 6379
    #Redis服务器连接密码，默认为空，若有设置按设置的来
    password: 182808
    jedis:
      pool:
        # 连接池最大连接数，若为负数则表示没有任何限制
        max-active: 8
        # 连接池最大阻塞等待时间，若为负数则表示没有任何限制
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 8

  datasource:
    # 数据源基本配置
    username: root
    password: 123456
    url: jdbc:mysql://localhost:3306/garbagesort?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
#    url: jdbc:mysql://localhost:3306/schoolwork?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    # driver-class需要注意mysql驱动的版本(com.mysql.cj.jdbc.Driver 或 com.mysql.jdbc.Driver)
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    # Druid的其他属性配置
    druid:
      # 初始化时建立物理连接的个数
      initial-size: 5
      # 连接池的最小空闲数量
      min-idle: 5
      # 连接池最大连接数量
      max-active: 20
      # 获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 既作为检测的间隔时间又作为testWhileIdel执行的依据
      time-between-eviction-runs-millis: 60000
      # 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接(配置连接在池中的最小生存时间)
      min-evictable-idle-time-millis: 30000
      # 用来检测数据库连接是否有效的sql 必须是一个查询语句(oracle中为 select 1 from dual)
#      validation-query: select 'x'
      # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      # 是否缓存preparedStatement, 也就是PSCache,PSCache对支持游标的数据库性能提升巨大，比如说oracle,在mysql下建议关闭。
      pool-prepared-statements: false
      # 置监控统计拦截的filters，去掉后监控界面sql无法统计，stat: 监控统计、Slf4j:日志记录、waLL: 防御sqL注入
      filters: stat,wall,slf4j
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-pool-prepared-statement-per-connection-size: -1
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# mybatis配置
#mybatis:
# 搜索指定包别名
#typeAliasesPackage: com.tyky.system
# 配置mapper的扫描，找到所有的mapper.xml映射文件
#mapperLocations: classpath:mapper/**/*.xml
mybatis-plus:
  global-config:
    db-config:
      id-type: auto
      table-underline: true
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
      #select-strategy: not_empty
      #insert-strategy: not_empty
      #update-strategy: not_empty
  # 如果是放在src/main/java目录下
  mapper-locations: classpath:/mapper/*SystemRoleMapper.xml,classpath:/mapper/**/*SystemRoleMapper.xml
  #configuration:
  #log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  #实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: com.wwh.system


